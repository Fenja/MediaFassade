// Generated by CoffeeScript 1.9.3
var count, countDown, custom_message_handler, draggable_accelerationsensor_handler, draggable_keylistener_handler, draggable_orientationsensor_handler, draggable_touchpad_handler, register, registerPlayer, registeredIDs, unregisteredPlayer;

custom_message_handler = function(msg) {
  return register(msg);
};

draggable_orientationsensor_handler = function(msg) {
  return register(msg);
};

draggable_accelerationsensor_handler = function(msg) {
  return register(msg);
};

draggable_touchpad_handler = function(msg) {
  return register(msg);
};

draggable_keylistener_handler = function(msg) {
  return register(msg);
};


/* Register your handler */

stk.framework.register_handler('custommessage', custom_message_handler);

stk.framework.register_handler('draggable_orientationsensor', draggable_orientationsensor_handler);

stk.framework.register_handler('draggable_accelerationsensor', draggable_accelerationsensor_handler);

stk.framework.register_handler('draggable_touchpad', draggable_touchpad_handler);

stk.framework.register_handler('draggable_keylistener', draggable_keylistener_handler);

stk.framework.timer(50, countDown);

unregisteredPlayer = 6;

registeredIDs = [];

count = 30;

register = function(msg) {
  if (unregisteredPlayer >= 1 && msg !== void 0) {
    return registerPlayer(msg.envelop.clientid);
  }
};

registerPlayer = function(id) {
  console.log(registeredIDs.indexOf(id));
  if (registeredIDs.indexOf(id) === -1) {
    registeredIDs.push(id);
    console.log("registerPlayer");
    id = "player" + (7 - unregisteredPlayer);
    $('#' + id).css('opacity', 1);
    return unregisteredPlayer -= 1;
  }
};

countDown = function() {
  if (count >= 0) {
    count -= 1;
    return $('#countdown').innerHTML = count;
  } else {
    return console.log("start!");
  }
};
